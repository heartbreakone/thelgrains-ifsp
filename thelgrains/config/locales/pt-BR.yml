pt-BR:
  views:
    pagination:
      first: "&laquo; Primeiro"
      last: "Last &raquo;"
      previous: "&lsaquo; Anterior"
      next: "Proximo &rsaquo;"
      truncate: "&hellip;"
  helpers:
    page_entries_info:
      one_page:
        display_entries:
          zero: "Nenhum %{entry_name} encontrado"
          one: "Exibindo <b>1</b> %{entry_name}"
          other: "Exibindo <b>all %{count}</b> %{entry_name}"
      more_pages:
        display_entries: "Exibindo %{entry_name} <b>%{first}&nbsp;-&nbsp;%{last}</b> of <b>%{total}</b> no total"
  date:
    formats:
      # Use the strftime parameters for formats.
      # When no format has been given, it uses default.
      # You can provide other formats here if you like!
      default: "%d-%m-%Y"
      short: "%b %d"
      long: "%B %d, %Y"

    day_names: [Domingo, Segunda, Terça, Quarta, Quinta, Sexta, Sábado]
    abbr_day_names: [Dom, Seg, Ter, Qua, Qui, Sex, Sab]

    # Don't forget the nil at the beginning; there's no such thing as a 0th month
    month_names: [~, Janeiro, Fevereiro, Março, Abril, Maio, Junho, Julho, Agosto, Setembro, Outubro, Novembro, Dezembro]
    abbr_month_names: [~, Jan, Fev, Mar, Abr, Mai, Jun, Jul, Ago, Set, Out, Nov, Dez]
    # Used in date_select and datetime_select.
    order:
      - day
      - month
      - year

  time:
    formats:
      default: "%a, %d %b %Y %H:%M:%S %z"
      short: "%d %b %H:%M"
      long: "%B %d, %Y %H:%M"
    am: "am"
    pm: "pm"

# Used in array.to_sentence.
  support:
    array:
      words_connector: ", "
      two_words_connector: " e "
      last_word_connector: ", e "

  number:
    # Used in NumberHelper.number_to_delimited()
    # These are also the defaults for 'currency', 'percentage', 'precision', and 'human'
    format:
      # Sets the separator between the units, for more precision (e.g. 1.0 / 2.0 == 0.5)
      separator: "."
      # Delimits thousands (e.g. 1,000,000 is a million) (always in groups of three)
      delimiter: ","
      # Number of decimals, behind the separator (the number 1 with a precision of 2 gives: 1.00)
      precision: 3
      # If set to true, precision will mean the number of significant digits instead
      # of the number of decimal digits (1234 with precision 2 becomes 1200, 1.23543 becomes 1.2)
      significant: false
      # If set, the zeros after the decimal separator will always be stripped (eg.: 1.200 will be 1.2)
      strip_insignificant_zeros: false

    # Used in NumberHelper.number_to_currency()
    currency:
      format:
        # Where is the currency sign? %u is the currency unit, %n the number (default: $5.00)
        format: "%u%n"
        unit: "$"
        # These five are to override number.format and are optional
        separator: "."
        delimiter: ","
        precision: 2
        significant: false
        strip_insignificant_zeros: false

    # Used in NumberHelper.number_to_percentage()
    percentage:
      format:
        # These five are to override number.format and are optional
        # separator:
        delimiter: ""
        # precision:
        # significant: false
        # strip_insignificant_zeros: false
        format: "%n%"

    # Used in NumberHelper.number_to_rounded()
    precision:
      format:
        # These five are to override number.format and are optional
        # separator:
        delimiter: ""
        # precision:
        # significant: false
        # strip_insignificant_zeros: false

    # Used in NumberHelper.number_to_human_size() and NumberHelper.number_to_human()
    human:
      format:
        # These five are to override number.format and are optional
        # separator:
        delimiter: ""
        precision: 3
        significant: true
        strip_insignificant_zeros: true
      # Used in number_to_human_size()
      storage_units:
        # Storage units output formatting.
        # %u is the storage unit, %n is the number (default: 2 MB)
        format: "%n %u"
        units:
          byte:
            one:   "Byte"
            other: "Bytes"
          kb: "KB"
          mb: "MB"
          gb: "GB"
          tb: "TB"
      # Used in NumberHelper.number_to_human()
      decimal_units:
        format: "%n %u"
        # Decimal units output formatting
        # By default we will only quantify some of the exponents
        # but the commented ones might be defined or overridden
        # by the user.
        units:
          # femto: Quadrillionth
          # pico: Trillionth
          # nano: Billionth
          # micro: Millionth
          # mili: Thousandth
          # centi: Hundredth
          # deci: Tenth
          unit: ""
          # ten:
          #   one: Ten
          #   other: Tens
          # hundred: Hundred
          thousand: Thousand
          million: Million
          billion: Billion
          trillion: Trillion
          quadrillion: Quadrillion

  activerecord:
    errors:
      # The default format to use in full error messages.
      format: "%{attribute} %{message}"

      # The values :model, :attribute and :value are always available for interpolation
      # The value :count is available when applicable. Can be used for pluralization.
      messages:
        model_invalid: "A Validação Falhou: %{errors}"
        inclusion: "Não está incluso na lista"
        exclusion: "é reservado"
        invalid: "é inválido"
        confirmation: "não confere com %{attribute}"
        accepted: "deve ser aceito"
        empty: "Não pode estar vazio"
        blank: "Não deve estar em branco"
        present: "Deve estar em branco"
        too_long:
          one: "é muito grande (o máximo é 1 caracter)"
          other: "é muito longo (o máximo são %{count} caracteres)"
        too_short:
          one: "é muito curto (o mínimo é 1 caracter)"
          other: "é muito curto (o mínimo são %{count} caracteres)"
        wrong_length:
          one: "tem o tamanho inválido (deveria ser 1 caracter)"
          other: "tem o tamanho errado (deveria ser %{count} caracteres)"
        not_a_number: "não é um número"
        not_an_integer: "deve ter um valor contido nos números naturais"
        greater_than: "deve ser maior que %{count}"
        greater_than_or_equal_to: "deve ser maior ou igual a %{count}"
        equal_to: "deve ser igual a %{count}"
        less_than: "deve ser menos que %{count}"
        less_than_or_equal_to: "deve ser menos que ou igual a %{count}"
        other_than: "deve ser diferente de %{count}"
        odd: "deve ser solicitado"
        even: "deve ser solicitado"
        record_invalid: 'Ocorreu um erro inesperado'
